// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package Bicache;

// The greeting service definition.
service ProxyServer{
  // Sends a greeting
  rpc Register(RegisterRequest) returns (RegisterReply) {}
  rpc HeartBeat(ProxyHeartBeatRequest) returns (ProxyHeartBeatReply) {}
  rpc GetConfig(GetConfigRequest) returns (GetConfigReply) {}
  //rpc GetNodeStatus(GetNodeStatusRequest) returns (GetConfigReply) {}
}

// The request message containing the user's name.
message RegisterRequest{
  string ip = 1;
  string port = 2;
  string kv_port = 3;
  //indicate whether it has already got the data.
  int32 pos = 4;
//  optional range
//  uint64 range_end = 3;
//  uint64 total_range= 4;
}

// The response message containing the greetings
message RegisterReply{
  //client 主动防御，超过1s的回复主动放弃，重新 register
  uint64 timestamp = 1;
  //the fields below are not used now
  //现在的 ProxyServer 不需要做loadbalance
  uint64 next_node_pos = 2;
  uint64 range_end = 3;
  uint64 total_range = 4;
  //end the fields below are not used now
  string next_node_ip_port = 5;
  //status&msg
  uint32 statue = 7;
  string error = 8;
  //
  uint64 pos = 9;
}

// The request message containing the user's name.
message ProxyHeartBeatRequest{
  uint32 pos = 1;
  uint64 timestamp = 2;
}

// The response message containing the greetings
message ProxyHeartBeatReply{
  uint64 timestamp = 1;
}

message GetConfigRequest{
}

//周期性的获取：获取
message GetConfigReply{
//这里使用两个变量而不是使用一个map是因为，protobuf 的复杂结构使用起来并不友好
  repeated uint32 pos_list = 1;
  repeated string ip_port_list = 2;
  uint32 virtual_node_num= 3;
}